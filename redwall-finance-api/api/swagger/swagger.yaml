swagger: "2.0"
info:
  version: "0.0.1"
  title: Redwall Finance
# during dev, should point to your local machine
host: localhost:3000
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /account:
    x-swagger-router-controller: account
    post:
      operationId: add
      description: add a new account
      parameters:
        - name: account
          description: Account properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/AccountProperties"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AccountResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /account/{accountNumber}:
    x-swagger-router-controller: account
    patch:
      operationId: update
      description: update an account
      parameters:
        - name: account
          description: Account properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/AccountProperties"
        - name: accountNumber
          description: account number
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AccountResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /accounts:
    x-swagger-router-controller: accounts
    get:
      operationId: get
      description: get the accounts list
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetAccountsListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user:
    x-swagger-router-controller: user
    post:
      operationId: add
      description: add a new user
      parameters:
        - name: user
          description: User properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserPostProperties"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/{userId}:
    x-swagger-router-controller: user
    delete:
      operationId: remove
      description: remove a user
      parameters:
        - name: userId
          description: user ID
          type: integer
          in: path
          required: true
      responses:
        "204":
          description: No Content
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      operationId: update
      description: update a user
      parameters:
        - name: user
          description: User properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserPostProperties"
        - name: userId
          description: user ID
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users:
    x-swagger-router-controller: users
    get:
      operationId: get
      description: get the users list
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUsersListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
definitions:
  AccountPatchProperties:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
  AccountPostProperties:
    required:
      - firstName
      - lastName
      - email
    properties:
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
  AccountResponse:
    required:
      - userId
      - firstName
      - lastName
      - email
      - createdAt
      - updatedAt
    properties:
      userId:
        type: integer
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string
  GetAccountsListResponse:
    type: array
    items:
      $ref: "#/definitions/UserResponse"
  GetUsersListResponse:
    type: array
    items:
      $ref: "#/definitions/UserResponse"
  UserPatchProperties:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
  UserPostProperties:
    required:
      - firstName
      - lastName
      - email
    properties:
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
  UserResponse:
    required:
      - userId
      - firstName
      - lastName
      - email
      - createdAt
      - updatedAt
    properties:
      userId:
        type: integer
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
